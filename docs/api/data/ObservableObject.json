[{"tags":[],"description":{"full":"Copyright 2015-2019 G-Labs. All Rights Reserved.\n        https://zuixjs.github.io/zuix\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","summary":"Copyright 2015-2019 G-Labs. All Rights Reserved.\n        https://zuixjs.github.io/zuix","body":"Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":17},{"tags":[{"type":"author","string":"Generoso Martello <generoso@martello.com>"}],"description":{"full":"This file is part of\n zUIx, Javascript library for component-based development.\n       https://zuixjs.github.io/zuix","summary":"This file is part of\n zUIx, Javascript library for component-based development.\n       https://zuixjs.github.io/zuix","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":18,"codeStart":27,"code":"'use strict';\n\nconst ObservableListener =\n    require('./ObservableListener');","ctx":false},{"tags":[{"type":"class","string":"ObservableObject"},{"type":"param","string":"{Object} context The observer context","name":"context","description":"The observer context","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object} target The target object to observe","name":"target","description":"The target object to observe","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{ProxyHandler} handler Handler for get/set callbacks","name":"handler","description":"Handler for get/set callbacks","types":["ProxyHandler"],"typesDescription":"<a href=\"ProxyHandler.html\">ProxyHandler</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"constructor","string":""}],"description":{"full":"ObservableObject class.","summary":"ObservableObject class.","body":""},"isPrivate":false,"isConstructor":true,"isClass":true,"isEvent":false,"ignore":false,"line":32,"codeStart":41,"code":"function ObservableObject(context, target, handler) {\n    Object.assign(handler, {context: context});\n    Object.assign(this, Proxy.revocable(target, handler));","ctx":{"type":"constructor","name":"ObservableObject","string":"ObservableObject()"}},{"tags":[{"type":"private","string":"","visibility":"private"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":44,"codeStart":45,"code":"this.handler = handler;","ctx":{"type":"property","receiver":"this","name":"handler","value":"handler","string":"this.handler"}},{"tags":[{"type":"private","string":"","visibility":"private"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":46,"codeStart":47,"code":"this.handler.context.observableList = this.handler.context.observableList || [];\nthis.handler.context.observableList.push(this);","ctx":{"type":"property","receiver":"this.handler.context","name":"observableList","value":"this.handler.context.observableList || []","string":"this.handler.context.observableList"}},{"tags":[{"type":"private","string":"","visibility":"private"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":49,"codeStart":50,"code":"this.target = target;","ctx":{"type":"property","receiver":"this","name":"target","value":"target","string":"this.target"}},{"tags":[{"type":"private","string":"","visibility":"private"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":51,"codeStart":52,"code":"this.__parents__ = [];","ctx":{"type":"property","receiver":"this","name":"__parents__","value":"[]","string":"this.__parents__"}},{"tags":[{"type":"private","string":"","visibility":"private"}],"description":{"full":"","summary":"","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":53,"codeStart":54,"code":"this.__listeners__ = [];\n}","ctx":{"type":"property","receiver":"this","name":"__listeners__","value":"[]","string":"this.__listeners__"}},{"tags":[{"type":"param","string":"{ObservableListener} observableListener","name":"observableListener","description":"","types":["ObservableListener"],"typesDescription":"<a href=\"ObservableListener.html\">ObservableListener</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"returns","string":"ObservableObject","types":[],"typesDescription":"","variable":false,"nonNullable":false,"nullable":false,"optional":false,"description":"ObservableObject"}],"description":{"full":"Subscribe a listener to this observable events","summary":"Subscribe a listener to this observable events","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":57,"codeStart":63,"code":"ObservableObject.prototype.subscribe = function(observableListener) {\n    const _t = this;\n    this.handler.context.observableList.forEach(function(p) {\n        if (p !== _t && p.__listeners__.indexOf(observableListener) !== -1) {\n            throw new Error('Listener already registered.');\n        }\n    });\n    this.__listeners__.push(observableListener);\n    return this;\n};","ctx":{"type":"method","constructor":"ObservableObject","cons":"ObservableObject","name":"subscribe","string":"ObservableObject.prototype.subscribe()"}},{"tags":[{"type":"param","string":"{ObservableListener} observableListener","name":"observableListener","description":"","types":["ObservableListener"],"typesDescription":"<a href=\"ObservableListener.html\">ObservableListener</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"returns","string":"ObservableObject","types":[],"typesDescription":"","variable":false,"nonNullable":false,"nullable":false,"optional":false,"description":"ObservableObject"}],"description":{"full":"Unsubscribe a listener","summary":"Unsubscribe a listener","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":74,"codeStart":80,"code":"ObservableObject.prototype.unsubscribe = function(observableListener) {\n    const i = this.__listeners__.indexOf(observableListener);\n    if (i !== -1) {\n        this.__listeners__.splice(i, 1);\n    }\n    if (this.__listeners__.length === 0) {\n        // this observable has no more direct listeners and can be removed\n        this.revoke();\n        // TODO: this is untested!!!\n        // remove this observable and parent references to it\n        const _t = this;\n        this.handler.context.observableList = this.handler.context.observableList.filter(function(p) {\n            if (p === _t) return false;\n            const i = p.__parents__.indexOf(_t);\n            if (i !== -1) {\n                p.__parents__.splice(i, 1);\n                // if child has no more parents nor listeners, then remove it as well\n                if (p.__parents__.length === 0 && p.__listeners__.length === 0) {\n                    // recursive call\n                    p.unsubscribe(null);\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    return this;\n};\n\nmodule.exports = ObservableObject;","ctx":{"type":"method","constructor":"ObservableObject","cons":"ObservableObject","name":"unsubscribe","string":"ObservableObject.prototype.unsubscribe()"}}]