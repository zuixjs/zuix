<?js
    var props = obj;

    /* sort subprops under their parent props (like opts.classname) */
    var parentProp = null;
    props.forEach(function(prop, i) {
        if (!prop) { return; }
        if ( parentProp && prop.name && prop.name.indexOf(parentProp.name + '.') === 0 ) {
            prop.name = prop.name.substr(parentProp.name.length+1);
            parentProp.subprops = parentProp.subprops || [];
            parentProp.subprops.push(prop);
            props[i] = null;
        }
        else {
            parentProp = prop;
        }
    });

    /* determine if we need extra columns, "attributes" and "default" */
    props.hasAttributes = false;
    props.hasDefault = false;
    props.hasName = false;

    props.forEach(function(prop) {
        if (!prop) { return; }

        if (prop.optional || prop.nullable) {
            props.hasAttributes = true;
        }

        if (prop.name) {
            props.hasName = true;
        }

        if (typeof prop.defaultvalue !== 'undefined') {
            props.hasDefault = true;
        }
    });
?>


<?js
    var self = this;
    props.forEach(function(prop) {
      if (!prop) { return; }
      if (props.hasName) {
?>#### <?js= prop.name ?> &rarr; <?js= prop.type.names.map(p => '*'+self.linkto(p)+'*').join(' \\| ') ?>

<?js= prop.description ?>


<?js } ?>

<?js  }) ?>
